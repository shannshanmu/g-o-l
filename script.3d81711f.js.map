{"version":3,"sources":["script.ts"],"names":[],"mappings":"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","file":"script.3d81711f.js","sourceRoot":"..\\src","sourcesContent":["\r\nconst canvas = document.querySelector<HTMLCanvasElement>(\"#game\")\r\nconst ctx = canvas.getContext(\"2d\");\r\nctx.canvas.width = window.innerWidth;\r\nctx.canvas.height = window.innerHeight;\r\nconst width = ctx.canvas.width;\r\nconst height = ctx.canvas.height;\r\n\r\nconst TILE_SIZE = 15;\r\nconst TILES_X = width / TILE_SIZE;\r\nconst TILES_Y = height / TILE_SIZE;\r\n\r\nctx.fillStyle = \"rgb(100, 240, 150)\";\r\nctx.strokeStyle = \"rgb(90, 90, 90)\";\r\nctx.lineWidth = 0.5; // retina\r\n// https://stackoverflow.com/questions/7530593/html5-canvas-and-line-width/7531540#7531540\r\n\r\nlet isGamePaused = false;\r\nlet devModeDiscovered = false;\r\nlet gameSpeed = 1000;\r\nlet tempOrigin = [0,0];\r\nlet tempTupleArray = [];\r\n\r\n// structures that have keybindings\r\nlet gliderFound = false; // g OR // 0\r\nlet blinkerFound = false; // b\r\nlet beaconFound = false; // e\r\nlet toadFound = false; // t\r\nlet pulsarFound = false; // a\r\nlet lightWeightSpaceshipFound = false; // 1\r\nlet middleWeightSpaceshipFound = false; // 2\r\nlet heavyWeightSpaceshipFound = false; // 3\r\nlet gosperGunFound = false; // 4\r\nlet pentaDecathlonFound = false; // 5\r\n\r\nconst drawBorders = () => {\r\n    for(let i=0; i<TILES_X; i++) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(i * TILE_SIZE - 0.5, 0);\r\n        ctx.lineTo(i * TILE_SIZE - 0.5, height);\r\n        ctx.stroke();\r\n    }\r\n    \r\n    for(let i=0; i<TILES_Y; i++) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, i * TILE_SIZE - 0.5);\r\n        ctx.lineTo(width, i * TILE_SIZE - 0.5);\r\n        ctx.stroke();\r\n    }\r\n}\r\n\r\nconst prepareBoard = () => {\r\n    const board = [];\r\n    for(let i=0; i<TILES_X; i++) {\r\n        const row = [];\r\n        for(let j=0; j<TILES_Y; j++) {\r\n            row.push(false);\r\n        }\r\n        board.push(row);\r\n    }\r\n    return board;\r\n}\r\n\r\nlet BOARD = prepareBoard();\r\n\r\nconst isAlive = (x: number, y: number): number => {\r\n    if (x < 0 || x >= TILES_X || y < 0 || y >= TILES_Y) {\r\n        return 0;\r\n    }\r\n    return BOARD[x][y] ? 1 : 0;\r\n}\r\n\r\nconst neighboursCount = (x: number, y: number): number => {\r\n    let count = 0;\r\n    for (let i of [-1, 0, 1]) {\r\n        for (let j of [-1, 0, 1]) {\r\n            if (! (i === 0 && j === 0)) {\r\n            count += isAlive(x + i, y + j)\r\n            }\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\nconst drawBoard = () => {\r\n    for(let i=0; i<TILES_X; i++) {\r\n        for(let j=0; j<TILES_X; j++) {\r\n            if (!isAlive(i, j)) {\r\n                continue;\r\n            }\r\n            ctx.fillRect(i * TILE_SIZE, j * TILE_SIZE, TILE_SIZE, TILE_SIZE);\r\n        }\r\n    }\r\n}\r\n\r\nconst computeNextGeneration = (): boolean[][] => {\r\n    const board = prepareBoard();\r\n    for(let i=0; i<TILES_X; i++) {\r\n        for(let j=0; j<TILES_X; j++) {\r\n            if (isAlive(i, j)) {\r\n                const count = neighboursCount(i, j);\r\n                if (count === 2 || count === 3) {\r\n                    board[i][j] = true;\r\n                }\r\n            } else {\r\n                if (neighboursCount(i, j) === 3) {\r\n                    board[i][j] = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return board;\r\n}\r\n\r\nconst clear = () => {\r\n    ctx.clearRect(0, 0, width, height);\r\n}\r\n\r\nconst drawAll = () => {\r\n    clear();\r\n    drawBoard();\r\n    drawBorders();\r\n}\r\n\r\nconst nextGen = () => {\r\n    if (isGamePaused) {\r\n        return;\r\n    }\r\n    BOARD = computeNextGeneration();\r\n    drawAll();\r\n}\r\n\r\nconst nextGenLoop = () => {\r\n    nextGen();\r\n    setTimeout(nextGenLoop, gameSpeed)\r\n}\r\n\r\n// creates glider at top left corner \r\n// (all coords start from bottom right quadrant but no negatives)\r\n/* \r\nBOARD[1][0] = true;\r\nBOARD[2][1] = true;\r\nBOARD[0][2] = true;\r\nBOARD[1][2] = true;\r\nBOARD[2][2] = true; \r\n*/\r\n\r\nconst genRandom = (min: number, max: number) => {\r\n    return Math.ceil((Math.random()*10000 + min) % max);\r\n}\r\n\r\nconst renderPoints = (points: number[][], ranX: number, ranY: number) => {\r\n    for (let point of points) {\r\n        BOARD[ranX+point[0]][ranY+point[1]] = true;\r\n    }\r\n}\r\n\r\n// spawn functions\r\n\r\nconst glider = () => {\r\n    let points = [[0,0],[1,1],[1,2],[2,0],[2,1]];\r\n    renderPoints(points, genRandom(3,TILES_X-3), genRandom(3,TILES_Y-3))\r\n}\r\n\r\nconst blinker = () => {\r\n    let points = [[0,0],[1,0],[2,0]];\r\n    renderPoints(points, genRandom(3,TILES_X-3), genRandom(3,TILES_Y-3))\r\n}\r\n\r\nconst beacon = () => {\r\n    let points = [[0,0],[1,0],[0,1],[1,1],[2,-2],[3,-2],[2,-1],[3,-1]];\r\n    renderPoints(points, genRandom(5,TILES_X-5), genRandom(5,TILES_Y-5))\r\n}\r\n\r\nconst toad = () => {\r\n    let points = [[0,0],[0,1],[1,2],[2,-1],[3,0],[3,1]];\r\n    renderPoints(points, genRandom(4,TILES_X-4), genRandom(3,TILES_Y-3))\r\n}\r\n\r\nconst pulsar = () => {\r\n    let points = [[0,0],[0,1],[0,2],[2,3],[3,3],[4,3],[5,2],[5,1],[5,0],[4,-2],[3,-2],[2,-2],[7,0],[7,1],[7,2],[8,3],[9,3],[10,3],[12,2],[12,1],[12,0],[10,-2],[9,-2],[8,-2],[0,6],[0,7],[0,8],[2,10],[3,10],[4,10],[5,8],[5,7],[5,6],[4,5],[3,5],[2,5],[7,6],[7,7],[7,8],[8,10],[9,10],[10,10],[12,8],[12,7],[12,6],[10,5],[9,5],[8,5]];\r\n    renderPoints(points, genRandom(15,TILES_X-15), genRandom(15,TILES_Y-15))\r\n}\r\n\r\nconst lightWeightSpaceship = () => {\r\n    let points = [[0,0],[3,0],[4,1],[4,2],[4,3],[3,3],[2,3],[1,3],[0,2]];\r\n    renderPoints(points, genRandom(5,TILES_X-5), genRandom(5,TILES_Y-5))\r\n}\r\n\r\nconst middleWeightSpaceship = () => {\r\n    let points = [[0,0],[0,2],[1,3],[2,3],[3,3],[4,3],[5,3],[5,2],[5,1],[4,0],[2,-1]];\r\n    renderPoints(points, genRandom(6,TILES_X-6), genRandom(4,TILES_Y-4))\r\n}\r\n\r\nconst heavyWeightSpaceship = () => {\r\n    let points = [[0,0],[0,2],[1,3],[2,3],[3,3],[4,3],[5,3],[6,3],[6,2],[6,1],[5,0],[3,-1],[2,-1]];\r\n    renderPoints(points, genRandom(7,TILES_X-7), genRandom(5,TILES_Y-5))\r\n}\r\n\r\nconst gosperGun = () => {\r\n    let points = [[0,0],[0,1],[1,0],[1,1],[13,-2],[12,-2],[11,-1],[10,0],[10,1],[10,2],[11,3],[12,4],[13,4],[14,1],[15,-1],[16,0],[16,1],[17,1],[16,2],[15,3],[20,0],[20,-1],[20,-2],[21,-2],[21,-1],[21,0],[22,1],[22,-3],[24,-3],[24,-4],[24,1],[24,2],[34,-1],[34,-2],[35,-2],[35,-1]]\r\n    renderPoints(points, genRandom(35,TILES_X-35), genRandom(7,TILES_Y-7))\r\n}\r\n\r\nconst pentaDecathlon = () => {\r\n    let points = [[0,0],[1,0],[2,0],[3,1],[4,2],[5,4],[5,5],[4,7],[3,8],[2,9],[1,9],[0,9],[-1,8],[-2,7],[-3,5],[-3,4],[-2,2],[-1,1]];\r\n    renderPoints(points, genRandom(8,TILES_X-8), genRandom(10,TILES_Y-10))\r\n}\r\n\r\n// spawn functions ended, onto event listeners and main keypress listener for spawning\r\n\r\nconst reset = () => {\r\n    if (!(tempOrigin[0] === 0 && tempOrigin[1] === 0)) {\r\n        tempOrigin = [0,0];\r\n        console.log(\"tempOrigin: [0,0]\")\r\n    }\r\n    tempTupleArray = []\r\n}\r\n\r\ncanvas.addEventListener(\"click\", e => {\r\n    if (e.button === 0) {\r\n        const x = Math.floor((e.clientX - canvas.offsetLeft) / TILE_SIZE);\r\n        const y = Math.floor((e.clientY - canvas.offsetTop) / TILE_SIZE);\r\n        BOARD[x][y] = !BOARD[x][y];\r\n        reset();\r\n        drawAll();\r\n    }\r\n});\r\n\r\ncanvas.addEventListener(\"auxclick\", e => {\r\n    //console.log(e.button)\r\n    if (e.button === 1) {\r\n        if (!(devModeDiscovered)) {\r\n            console.log(\"congrats you unlocked dev mode!!1!\")\r\n            devModeDiscovered = true;\r\n        }\r\n        let x = Math.floor((e.clientX - canvas.offsetLeft) / TILE_SIZE)\r\n        let y = Math.floor((e.clientY - canvas.offsetTop) / TILE_SIZE)\r\n        //console.log(\"works\")\r\n        if (tempOrigin[0] === 0 && tempOrigin[1] === 0) {\r\n            tempOrigin = [x,y];\r\n            console.log(\"tempOrigin: \" + tempOrigin)\r\n        } else {\r\n            let relativeX = x - tempOrigin[0]\r\n            let relativeY = y - tempOrigin[1]\r\n            let relativeCoords = [relativeX, relativeY]\r\n            tempTupleArray.push(\"[\" + relativeX + \",\" + relativeY + \"]\")\r\n            console.log(\"relative coords: \" + relativeCoords)\r\n            console.log(\"full tuple array: \" + tempTupleArray)\r\n        }\r\n    }\r\n});\r\n\r\nconst prepareRandom = (): boolean[][] => {\r\n    const board = prepareBoard();\r\n    for (let i=0; i<TILES_X; i++) {\r\n        for (let j=0; j<TILES_X; j++) {\r\n            board[i][j] = Math.random() < 0.3; // 30% chance for true\r\n        }\r\n    }\r\n    return board;\r\n}\r\n\r\n// pauses game of life to let user click\r\ndocument.addEventListener(\"keydown\", e => {\r\n    // console.log(e.key)\r\n\r\n    if (e.key === \"p\") {\r\n        // pause\r\n        isGamePaused = !isGamePaused;\r\n    } else if (e.key === \"r\") {\r\n        // random set of tiles generated\r\n        BOARD = prepareRandom();\r\n    } else if (e.key == \"ArrowUp\") {\r\n        // increase speed\r\n        gameSpeed = Math.max(50, gameSpeed - 50);\r\n        // console.log(\"game speed changed\", gameSpeed);\r\n    } else if (e.key == \"ArrowDown\") {\r\n        // decrease speed\r\n        gameSpeed = Math.max(gameSpeed, gameSpeed + 50);\r\n        // console.log(\"game speed changed\", gameSpeed);\r\n        if (gameSpeed > 2000) {\r\n            gameSpeed = 2000\r\n            // console.log(\"game speed force changed big funny\")\r\n        }\r\n    } else if (e.key === \"c\") {\r\n        // clears board\r\n        BOARD = prepareBoard();\r\n    } \r\n    \r\n    else if (e.key === \"g\") {\r\n        glider();\r\n        if (gliderFound == false) {\r\n            console.log(\"well done! you found the glider spawn key! (g)\")\r\n            gliderFound = true;\r\n        }\r\n    } else if (e.key === \"b\") {\r\n        blinker();\r\n        if (blinkerFound == false) {\r\n            console.log(\"well done! you found the blinker spawn key! (b)\")\r\n            blinkerFound = true;\r\n        }\r\n    } else if (e.key === \"e\") {\r\n        beacon();\r\n        if (beaconFound == false) {\r\n            console.log(\"well done! you found the beacon spawn key! (e)\")\r\n        }\r\n    } else if (e.key === \"t\") {\r\n        toad();\r\n        if (toadFound == false) {\r\n            console.log(\"well done! you found the toad spawn key! (t)\")\r\n        }\r\n    } else if (e.key === \"a\") {\r\n        pulsar();\r\n        if (pulsarFound == false) {\r\n            console.log(\"well done! you found the pulsar spawn key! (a)\")\r\n            pulsarFound = true;\r\n        }\r\n    } else if (e.key === \"1\") {\r\n        lightWeightSpaceship();\r\n        if (lightWeightSpaceshipFound == false) {\r\n            console.log(\"well done! you found the lightweight spaceship spawn key! (1)\")\r\n            lightWeightSpaceshipFound = true;\r\n        }\r\n    } else if (e.key === \"2\") {\r\n        middleWeightSpaceship();\r\n        if (middleWeightSpaceshipFound == false) {\r\n            console.log(\"well done! you found the middleweight spaceship spawn key! (2)\")\r\n            middleWeightSpaceshipFound = true;\r\n        }\r\n    } else if (e.key === \"3\") {\r\n        heavyWeightSpaceship();\r\n        if (heavyWeightSpaceshipFound == false) {\r\n            console.log(\"well done! you found the heavyweight spaceship spawn key! (3)\")\r\n            heavyWeightSpaceshipFound = true;\r\n        }\r\n    } else if (e.key === \"4\") {\r\n        gosperGun();\r\n        if (gosperGunFound == false) {\r\n            console.log(\"well done! you found the spaceship spawn key! (4)\")\r\n            gosperGunFound = true;\r\n        }\r\n    } else if (e.key === \"5\") {\r\n        pentaDecathlon();\r\n        if (pentaDecathlonFound == false) {\r\n            console.log(\"well done! you found the penta-decathlon spawn key! (5)\")\r\n            pentaDecathlonFound = true;\r\n        }\r\n    } \r\n    \r\n    /*\r\n    else if (e.key === \"9\") {\r\n        // spawn random static block for testing purposes\r\n        block();\r\n    }\r\n    */\r\n});\r\n\r\nnextGenLoop();\r\n"]}